<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr\Orx;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    function findByRoleAndLesson($roleId, $lessonId)
    {
        $qb = $this->createQueryBuilder('u');
        $qb->select('u')
            ->innerJoin('u.lesson', 'c', 'WITH', 'c.id = :lessonId')
            ->where('u.role = :roleId')
            ->setParameters(array(
                'roleId' => $roleId,
                'lessonId' => $lessonId
            ));
        $query = $qb->getQuery();
        $results = $query->getResult();
        return $results;
    }

    /**
     * Find all user by login, except optional specific user identifier
     * For user uniqueness check
     * @param string $login
     * @param integer|null $exceptId
     * @return array
     */
    function findByLogin($login, $exceptId = null)
    {
        $queryParams = array(
            'login' => $login
        );

        $qb = $this->createQueryBuilder('u');
        $qb->select('u')
            ->where('u.username = :login');

        if ($exceptId) {
            $qb->andWhere('u.id != :exceptId');
            $queryParams['exceptId'] = $exceptId;
        }
        $qb->setParameters($queryParams);
        $query = $qb->getQuery();
        $results = $query->getResult();
        return $results;
    }

    public function findByUsernameOrEmail($username)
    {
        $qb = $this->createQueryBuilder('u');
        $qb
            ->select('u')
            ->where(new Orx([
                'u.username = :username',
                'u.email = :username'
            ]))
            ->setParameter('username', $username)
            ->setMaxResults(1);
        $query = $qb->getQuery();
        $results = $query->getResult();
        return $results;
    }
}
